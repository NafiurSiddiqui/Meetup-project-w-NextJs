import { MongoClient } from 'mongodb';

// /api/new-meetup
// POST /api/new-meetup

async function Handler(req, res) {
	//this ensure we do nothing except for any POST request.
	if (req.method === 'POST') {
		//get access to the body
		const data = req.body;
		//--now this will be the end point to create a new meetup.

		// const { title, image, address, description } = data;
		// //--these are the four field we expect from meetup submission.

		//NOW store these in the DB
		const client = await MongoClient.connect('');

		const db = client.db();

		const meetupsCollections = db.collection('meetups');

		// meetupsCollections.insertOne({});
		// -- since it takes object, we already have data as object and no need for the destructuring.
		const result = await meetupsCollections.insertOne(data);

		console.log(result);

		//close the connection when done
		client.close();

		//SEND back the response assuming it is done
		res.status(201).json({
			message: 'meetup inserted successfully!',
		});
	}
}

export default Handler;

/**
 *Often the name is Handler.
 Refer to the API router notes in Wps > cloud > React
 * we have access to the req object. header and body as well.
 *mongoClient is an object provided by mDB.
 @mongoDBclient - establishes the connection to the DB with this method. returns a promise, hence we are using async here.
 @Link - is provided by mDB cluster.
 -- NOTE: we needed to manually enter the password here.
 *@mongoDB - is a noSQL DB that works with collections full of documents. collections would be kind of table in your SQL DB and documents would be the entries in those tables. So we have collections which hold multiple documents.
 @collections -  SO, here one MEETUP would be one document and bunch of documents container is the COLLECTION. If there is no name, a name would be generated or we can define.we name it 'meetups'
 @insertOne - to put ONE new document into the collection. A document is just a JS object in the end. This returns a promise so we can await them. and cool thing is with autogenerated ID.

 @mongoPassword - MAKE SURE, if you have any special character in the pass, to put the ASCII code of the character preceded by %.
 */
